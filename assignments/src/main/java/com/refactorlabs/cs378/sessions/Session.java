/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.refactorlabs.cs378.sessions;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Session extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Session\",\"namespace\":\"com.refactorlabs.cs378.sessions\",\"fields\":[{\"name\":\"user_id\",\"type\":\"string\"},{\"name\":\"events\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Event\",\"fields\":[{\"name\":\"event_type\",\"type\":{\"type\":\"enum\",\"name\":\"EventType\",\"symbols\":[\"CHANGE\",\"CLICK\",\"CONTACT_FORM_STATUS\",\"EDIT\",\"SHARE\",\"SHOW\",\"SUBMIT\",\"VISIT\"]}},{\"name\":\"event_subtype\",\"type\":{\"type\":\"enum\",\"name\":\"EventSubtype\",\"symbols\":[\"CONTACT_FORM\",\"MARKET_REPORT\",\"CONTACT_FORM_TYPE\",\"ALTERNATIVE\",\"CONTACT_BANNER\",\"CONTACT_BUTTON\",\"DEALER_PHONE\",\"FEATURES_SECTION\",\"GET_DIRECTIONS\",\"SHOW_MORE_BADGES\",\"TEST_DRIVE_LINK\",\"VEHICLE_HISTORY_REPORT_LINK\",\"ERROR\",\"SUCCESS\",\"BADGE_DETAIL\",\"PHOTO_MODAL\",\"BADGES\",\"FEATURES\",\"ALTERNATIVES\",\"VEHICLE_HISTORY\"]}},{\"name\":\"event_timestamp\",\"type\":\"string\"},{\"name\":\"page\",\"type\":\"string\"},{\"name\":\"referrer\",\"type\":\"string\"},{\"name\":\"referring_domain\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"},{\"name\":\"vin\",\"type\":\"string\"},{\"name\":\"vehicle_condition\",\"type\":{\"type\":\"enum\",\"name\":\"Type\",\"symbols\":[\"CPO\",\"NEW\",\"USED\"]}},{\"name\":\"year\",\"type\":\"int\"},{\"name\":\"make\",\"type\":\"string\"},{\"name\":\"model\",\"type\":\"string\"},{\"name\":\"trim\",\"type\":\"string\"},{\"name\":\"body_style\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"BodyStyle\",\"symbols\":[\"CHASSIS\",\"CONVERTIBLE\",\"COUPE\",\"HATCHBACK\",\"MINIVAN\",\"PICKUP\",\"SUV\",\"VAN\",\"WAGON\",\"SEDAN\"]}]},{\"name\":\"subtrim\",\"type\":\"string\"},{\"name\":\"cab_style\",\"type\":[\"null\",\"string\"]},{\"name\":\"features\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"initial_price\",\"type\":\"float\"},{\"name\":\"mileage\",\"type\":\"int\"},{\"name\":\"mpg\",\"type\":\"int\"},{\"name\":\"exterior_color\",\"type\":\"string\"},{\"name\":\"interior_color\",\"type\":\"string\"},{\"name\":\"engine_displacement\",\"type\":\"string\"},{\"name\":\"engine\",\"type\":\"string\"},{\"name\":\"transmission\",\"type\":\"string\"},{\"name\":\"drive_type\",\"type\":\"string\"},{\"name\":\"fuel\",\"type\":\"string\"},{\"name\":\"image_count\",\"type\":\"int\"},{\"name\":\"initial_carfax_free_report\",\"type\":\"boolean\"},{\"name\":\"carfax_one_owner\",\"type\":\"boolean\"},{\"name\":\"initial_cpo\",\"type\":\"boolean\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence user_id;
  @Deprecated public java.util.List<com.refactorlabs.cs378.sessions.Event> events;

  /**
   * Default constructor.
   */
  public Session() {}

  /**
   * All-args constructor.
   */
  public Session(java.lang.CharSequence user_id, java.util.List<com.refactorlabs.cs378.sessions.Event> events) {
    this.user_id = user_id;
    this.events = events;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return user_id;
    case 1: return events;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: user_id = (java.lang.CharSequence)value$; break;
    case 1: events = (java.util.List<com.refactorlabs.cs378.sessions.Event>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'user_id' field.
   */
  public java.lang.CharSequence getUserId() {
    return user_id;
  }

  /**
   * Sets the value of the 'user_id' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.CharSequence value) {
    this.user_id = value;
  }

  /**
   * Gets the value of the 'events' field.
   */
  public java.util.List<com.refactorlabs.cs378.sessions.Event> getEvents() {
    return events;
  }

  /**
   * Sets the value of the 'events' field.
   * @param value the value to set.
   */
  public void setEvents(java.util.List<com.refactorlabs.cs378.sessions.Event> value) {
    this.events = value;
  }

  /** Creates a new Session RecordBuilder */
  public static com.refactorlabs.cs378.sessions.Session.Builder newBuilder() {
    return new com.refactorlabs.cs378.sessions.Session.Builder();
  }
  
  /** Creates a new Session RecordBuilder by copying an existing Builder */
  public static com.refactorlabs.cs378.sessions.Session.Builder newBuilder(com.refactorlabs.cs378.sessions.Session.Builder other) {
    return new com.refactorlabs.cs378.sessions.Session.Builder(other);
  }
  
  /** Creates a new Session RecordBuilder by copying an existing Session instance */
  public static com.refactorlabs.cs378.sessions.Session.Builder newBuilder(com.refactorlabs.cs378.sessions.Session other) {
    return new com.refactorlabs.cs378.sessions.Session.Builder(other);
  }
  
  /**
   * RecordBuilder for Session instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Session>
    implements org.apache.avro.data.RecordBuilder<Session> {

    private java.lang.CharSequence user_id;
    private java.util.List<com.refactorlabs.cs378.sessions.Event> events;

    /** Creates a new Builder */
    private Builder() {
      super(com.refactorlabs.cs378.sessions.Session.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.refactorlabs.cs378.sessions.Session.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Session instance */
    private Builder(com.refactorlabs.cs378.sessions.Session other) {
            super(com.refactorlabs.cs378.sessions.Session.SCHEMA$);
      if (isValidValue(fields()[0], other.user_id)) {
        this.user_id = data().deepCopy(fields()[0].schema(), other.user_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.events)) {
        this.events = data().deepCopy(fields()[1].schema(), other.events);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'user_id' field */
    public java.lang.CharSequence getUserId() {
      return user_id;
    }
    
    /** Sets the value of the 'user_id' field */
    public com.refactorlabs.cs378.sessions.Session.Builder setUserId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.user_id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'user_id' field has been set */
    public boolean hasUserId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'user_id' field */
    public com.refactorlabs.cs378.sessions.Session.Builder clearUserId() {
      user_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'events' field */
    public java.util.List<com.refactorlabs.cs378.sessions.Event> getEvents() {
      return events;
    }
    
    /** Sets the value of the 'events' field */
    public com.refactorlabs.cs378.sessions.Session.Builder setEvents(java.util.List<com.refactorlabs.cs378.sessions.Event> value) {
      validate(fields()[1], value);
      this.events = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'events' field has been set */
    public boolean hasEvents() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'events' field */
    public com.refactorlabs.cs378.sessions.Session.Builder clearEvents() {
      events = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Session build() {
      try {
        Session record = new Session();
        record.user_id = fieldSetFlags()[0] ? this.user_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.events = fieldSetFlags()[1] ? this.events : (java.util.List<com.refactorlabs.cs378.sessions.Event>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
